1 - Write a try-catch block that handles ArithmeticException when dividing by zero.

2 - What is the purpose of the finally block? Write an example.

3 - Write a program that throws an exception using throw keyword manually.

4 - Explain throws keyword with a method that can throw IOException.

5 - Write nested try-catch blocks to handle multiple exceptions (e.g., ArrayIndexOutOfBoundsException and NullPointerException).

6 - Write a method that reads integer input from user and handles InputMismatchException.

7 - Write a custom checked exception class and throw it in a method.

8 - How does throw differ from throws? Write code demonstrating both.

9 - What happens if exception is not caught? Demonstrate unchecked exception behavior.

10 - Explain how to create multiple catch blocks and the importance of their order.

                Collection Framework Intro + Types (Basic):

1 - What is a Collection Framework in Java? Name some core interfaces.

2 - Create an ArrayList and add 5 integers. Print them.

3 - Create a LinkedList of Strings and add 3 names. Iterate and print.

4 - Explain difference between List and Set with examples.

5 - Write a program that stores unique integers in a HashSet and prints them.

6 - Use a TreeSet to store 5 strings in sorted order.

7 - What is the difference between ArrayList and Vector? Write simple code showing thread safety of Vector.

8 - Explain Queue interface and demonstrate it using LinkedList.

9 - Write a program to use PriorityQueue to insert elements and print in natural order.

10 - Write a short note on Map interface and create a HashMap with 3 key-value pairs.
